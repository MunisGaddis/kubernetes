Deploying the Spring Pet Clinic App in Kubernetes.

kubectl create namespace dev
Set as dev namespace as default namespace:
kubectl config set-context --current --namespace=dev
Create a MySQL deployment and service in the dev namespace.

create mysql deployment
nano mysql-deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-db
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.4
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_USER
          value: petclinic
        - name: MYSQL_PASSWORD
          value: petclinic
        - name: MYSQL_ROOT_PASSWORD
          value: root
        - name: MYSQL_DATABASE
          value: petclinic
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: dev
spec:
  type: ClusterIP  
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: mysql
**********************************************************************
kubectl apply -f mysql-deployment.yml
kubectl get all -n dev
kubectl exec -it mysql-db-7d8cf944c-mcvnq -- /bin/sh
mysql -u root -p
SHOW DATABASES;
USE petclinic;
SHOW TABLES;
SELECT * FROM owners;
exit
***********************************************************************
Create a deployment for the Spring PetClinic application with two replicas.
nano petclinic-app-deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: petclinic-app
  namespace: dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: petclinic
  template:
    metadata:
      labels:
        app: petclinic
    spec:
      containers:
        - name: petclinic
          image: monudocker334/petclinic-spring-app:v1
          ports:
            - containerPort: 8080
          env:
            - name: MYSQL_URL
              value: jdbc:mysql://mysql-service:3306/petclinic
            - name: MYSQL_USER
              value: petclinic
            - name: MYSQL_PASSWORD
              value: petclinic
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: petclinic
---
apiVersion: v1
kind: Service
metadata:
  name: petclinic-service
  namespace: dev
spec:
  type: NodePort
  selector:
    app: petclinic
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30007
*****************************************************************************
kubectl apply -f petclinic-app-deployment.yml
kubectl get all -n dev
Access the Spring PetClinic application using the NodePort URL http://<node-ip>:30007.
Find Owners Page and details of a particular Owner:
Add a new Owner and adding Pets to him:
Now you can check in MySQL shell that new user has been added or not:
SELECT * FROM owners;
SELECT * FROM pets;
